// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClickUpTypeScriptProject defaults .github/workflows/release.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
concurrency:
  group: \${{ github.workflow }}
  cancel-in-progress: false
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
      tag_exists: \${{ steps.check_tag_exists.outputs.exists }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: GitHub Packages authorization
        env:
          NPM_TOKEN: \${{ secrets.ALL_PACKAGE_READ_TOKEN }}
        run: |-
          cat > ~/.npmrc <<EOF
          //npm.pkg.github.com/:_authToken=\${NPM_TOKEN}
          @time-loop:registry=https://npm.pkg.github.com/
          EOF
      - name: Make cdk-ecr-deployment sane
        run: export FORCE_PREBUILT_LAMBDA=1
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.13.1
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: release
        run: npx projen release
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: \${{ secrets.CODECOV_TOKEN }}
          directory: coverage
      - name: Check if version has already been tagged
        id: check_tag_exists
        run: |-
          TAG=$(cat dist/releasetag.txt)
          ([ ! -z "$TAG" ] && git ls-remote -q --exit-code --tags origin $TAG && (echo "exists=true" >> $GITHUB_OUTPUT)) || (echo "exists=false" >> $GITHUB_OUTPUT)
          cat $GITHUB_OUTPUT
      - name: Check for new commits
        id: git_remote
        run: |-
          echo "latest_commit=$(git ls-remote origin -h \${{ github.ref }} | cut -f1)" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
      - name: Backup artifact permissions
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        run: cd dist && getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: build-artifact
          path: dist
          overwrite: true
  release_github:
    name: Publish to GitHub Releases
    needs:
      - release
      - release_npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.tag_exists != 'true' && needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22.13.1
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Release
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: \${{ github.repository }}
          GITHUB_REF: \${{ github.sha }}
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q "Release.tag_name already exists" $errout; then cat $errout; exit $exitcode; fi
  release_npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: needs.release.outputs.tag_exists != 'true' && needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22.13.1
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Release
        env:
          NPM_DIST_TAG: latest
          NPM_REGISTRY: npm.pkg.github.com
          NPM_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        run: npx -p publib@latest publib-npm
  send_release_event_to_slack:
    name: Send Release Alert to Slack
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Get version
        id: event_metadata
        run: echo "release_tag=$(cat dist/releasetag.txt)" >> $GITHUB_OUTPUT
      - name: Send Slack webhook event
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7
        env:
          SLACK_TITLE: \${{ github.repository }}@\${{ steps.event_metadata.outputs.release_tag }} released!
          SLACK_MESSAGE: "View the release notes here: https://github.com/\${{ github.repository }}/releases/tag/\${{ steps.event_metadata.outputs.release_tag }}"
          SLACK_WEBHOOK: \${{ secrets.PROJEN_RELEASE_SLACK_WEBHOOK }}
          SLACK_FOOTER: ""
          SLACK_COLOR: success
          MSG_MINIMAL: "true"
"
`;

exports[`ClickUpTypeScriptProject defaults .github/workflows/upgrade-main.yml 1`] = `undefined`;

exports[`ClickUpTypeScriptProject defaults .mergify.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

queue_rules:
  - name: default
    update_method: merge
    conditions:
      - "#approved-reviews-by>=1"
      - -label~=(do-not-merge)
      - status-success=build
    merge_method: squash
    commit_message_template: |-
      {{ title }} (#{{ number }})

      {{ body }}
pull_request_rules:
  - name: Automatic merge on approval and successful build
    actions:
      delete_head_branch: {}
      queue:
        name: default
    conditions:
      - "#approved-reviews-by>=1"
      - -label~=(do-not-merge)
      - status-success=build
"
`;

exports[`ClickUpTypeScriptProject defaults codecov.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

coverage:
  precision: 2
  round: down
  status:
    project:
      default:
        target: auto
        threshold: 10%
        paths:
          - src
        if_ci_failed: error
        only_pulls: true
    patch:
      default:
        base: auto
        target: auto
        threshold: 10%
        paths:
          - src
        if_ci_failed: error
        only_pulls: true
parsers:
  gcov:
    branch_detection:
      conditional: yes
      loop: yes
      method: no
      macro: no
comment:
  layout: reach,diff,flags,files,footer
  behavior: default
  require_changes: no
"
`;

exports[`ClickUpTypeScriptProject defaults package.json 1`] = `
{
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
  "author": {
    "name": "ClickUp",
    "organization": true,
  },
  "dependencies": {
    "@time-loop/clickup-projen": "*",
  },
  "devDependencies": {
    "@types/jest": "*",
    "@types/node": "^18",
    "@typescript-eslint/eslint-plugin": "^8",
    "@typescript-eslint/parser": "^8",
    "commit-and-tag-version": "^12",
    "constructs": "^10.0.0",
    "esbuild": "*",
    "eslint": "^9",
    "eslint-config-prettier": "*",
    "eslint-import-resolver-typescript": "*",
    "eslint-plugin-import": "*",
    "eslint-plugin-prettier": "*",
    "jest": "*",
    "jest-junit": "^16",
    "jsii-release": "*",
    "prettier": "*",
    "projen": "*",
    "ts-jest": "*",
    "ts-node": "^10",
    "typedoc": "*",
    "typedoc-plugin-markdown": "*",
    "typescript": "*",
  },
  "engines": {
    "node": ">= 18.17.1",
  },
  "jest": {
    "clearMocks": true,
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.ts",
    ],
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/",
    ],
    "coverageProvider": "v8",
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": [
      "<rootDir>/@(src|test)/**/*(*.)@(spec|test).ts?(x)",
      "<rootDir>/@(src|test)/**/__tests__/**/*.ts?(x)",
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
    ],
    "transform": {
      "^.+\\.[t]sx?$": [
        "ts-jest",
        {
          "tsconfig": "tsconfig.dev.json",
        },
      ],
    },
    "watchPathIgnorePatterns": [
      "/node_modules/",
    ],
  },
  "license": "UNLICENSED",
  "main": "lib/index.js",
  "name": "@time-loop/test",
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/",
  },
  "scripts": {
    "build": "npx projen build",
    "bump": "npx projen bump",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "post-upgrade": "npx projen post-upgrade",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "release": "npx projen release",
    "test": "npx projen test",
    "test:watch": "npx projen test:watch",
    "typedocDocgen": "npx projen typedocDocgen",
    "unbump": "npx projen unbump",
    "update-projen": "npx projen update-projen",
    "upgrade": "npx projen upgrade",
    "watch": "npx projen watch",
  },
  "types": "lib/index.d.ts",
  "version": "0.0.0",
}
`;
