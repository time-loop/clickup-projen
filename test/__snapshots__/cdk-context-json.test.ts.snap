// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addOidcRoleStack adds stack definition 1`] = `
"import { core } from '@time-loop/cdk-library';
import { aws_iam, Stage } from 'aws-cdk-lib';
import { Construct } from 'constructs';
import { Namer } from 'multi-convention-namer';

export class GitHubActionsOIDCCdkContextLookupRole extends core.Stack {
  static asStage(scope: Construct, stageName: string, stageProps: core.StageProps): Stage {
    return new (class extends Stage {
      constructor() {
        super(scope, stageName, stageProps);
        new GitHubActionsOIDCCdkContextLookupRole(this, stageProps);
      }
    })();
  }
  constructor(scope: Construct, props: core.StackProps) {
    const projectName = 'test';
    // NOTE: you should never deploy this anywhere but the cdkPipelines account
    // And the GitHubActionsOIDCPermissions class for cdk-diff should never be deployed
    // in the cdkPipelines account. Name collision is intentional here.
    let id = new Namer([...projectName.split('-'), 'github', 'actions']);
    super(scope, id, props);

    const githubActionsRoleName = id.addSuffix(['role']).kebab;
    const githubActionsRole = new aws_iam.Role(this, githubActionsRoleName, {
      roleName: githubActionsRoleName,
      assumedBy: new aws_iam.FederatedPrincipal(
        \`arn:aws:iam::\${this.account}:oidc-provider/token.actions.githubusercontent.com\`,
        {
          StringEquals: {
            'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com',
          },
          StringLike: {
            'token.actions.githubusercontent.com:sub': \`repo:time-loop/\${projectName}:*\`,
          },
        },
        'sts:AssumeRoleWithWebIdentity',
      ),
    });

    const githubActionsPolicyName = id.addSuffix(['policy']).kebab;
    const githubActionsPolicy = new aws_iam.Policy(this, githubActionsPolicyName, {
      policyName: githubActionsPolicyName,
      statements: [
        new aws_iam.PolicyStatement({
          actions: [ 'sts:AssumeRole' ],
          resources: [ 'arn:aws:iam::*:role/cdk-*lookup-role*' ],
        }),
      ],
    });

    // Attach IAM policy to IAM role
    githubActionsPolicy.attachToRole(githubActionsRole);
  }
}
"
`;

exports[`injectAwsAuthIntoBuild updates build WF 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: build
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      self_mutation_happened: \${{ steps.self_mutation.outputs.self_mutation_happened }}
    env:
      CI: "true"
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::123412341234:role/test-github-actions-role
          role-duration-seconds: 900
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: \${{ github.event.pull_request.head.ref }}
          repository: \${{ github.event.pull_request.head.repo.full_name }}
      - name: Install dependencies
        run: yarn install --check-files
      - name: build
        run: npx projen build
      - name: Find mutations
        id: self_mutation
        run: |-
          git add .
          git diff --staged --patch --exit-code > repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT
        shell: bash
        working-directory: ./
      - name: Upload patch
        if: steps.self_mutation.outputs.self_mutation_happened
        uses: actions/upload-artifact@v4.6.2
        with:
          name: repo.patch
          path: repo.patch
          overwrite: true
      - name: Fail build on mutation
        if: steps.self_mutation.outputs.self_mutation_happened
        run: |-
          echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
          cat repo.patch
          exit 1
  self-mutation:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: always() && needs.build.outputs.self_mutation_happened && !(github.event.pull_request.head.repo.full_name != github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: \${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: \${{ github.event.pull_request.head.ref }}
          repository: \${{ github.event.pull_request.head.repo.full_name }}
      - name: Download patch
        uses: actions/download-artifact@v5
        with:
          name: repo.patch
          path: \${{ runner.temp }}
      - name: Apply patch
        run: '[ -s \${{ runner.temp }}/repo.patch ] && git apply \${{ runner.temp }}/repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Push changes
        env:
          PULL_REQUEST_REF: \${{ github.event.pull_request.head.ref }}
        run: |-
          git add .
          git commit -s -m "chore: self mutation"
          git push origin "HEAD:$PULL_REQUEST_REF"
"
`;
